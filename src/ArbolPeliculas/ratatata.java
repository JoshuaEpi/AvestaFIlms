/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ArbolPeliculas;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author Pierre
 */
public class ratatata extends javax.swing.JFrame {

    /**
     * Creates new form ratata
     */
    public ratatata() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnAutor = new javax.swing.JButton();
        jbtnEditorial = new javax.swing.JButton();
        btnCategoria = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnAutorAleatorio = new javax.swing.JButton();
        btnTituloAleatorio = new javax.swing.JButton();
        txtautorprueba = new javax.swing.JTextField();
        txteditorialprueba = new javax.swing.JTextField();
        txtcategoriaprueba = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(900, 650));

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Recomendar por:");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 28, -1, -1));

        btnAutor.setText("Genero");
        btnAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutorActionPerformed(evt);
            }
        });
        jPanel2.add(btnAutor, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, 650, -1));

        jbtnEditorial.setText("Edad");
        jbtnEditorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEditorialActionPerformed(evt);
            }
        });
        jPanel2.add(jbtnEditorial, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 650, -1));

        btnCategoria.setText("Duracion");
        btnCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCategoriaActionPerformed(evt);
            }
        });
        jPanel2.add(btnCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, 650, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 17)); // NOI18N
        jLabel3.setText("Recomendar aleatoriamente:");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, -1, -1));

        btnAutorAleatorio.setText("Autor");
        btnAutorAleatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutorAleatorioActionPerformed(evt);
            }
        });
        jPanel2.add(btnAutorAleatorio, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 360, 650, -1));

        btnTituloAleatorio.setText("Titulo");
        btnTituloAleatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTituloAleatorioActionPerformed(evt);
            }
        });
        jPanel2.add(btnTituloAleatorio, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 450, 650, -1));

        txtautorprueba.setEditable(false);
        txtautorprueba.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel2.add(txtautorprueba, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 650, 46));

        txteditorialprueba.setEditable(false);
        txteditorialprueba.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel2.add(txteditorialprueba, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, 650, 46));

        txtcategoriaprueba.setEditable(false);
        txtcategoriaprueba.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel2.add(txtcategoriaprueba, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, 650, 46));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 731, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 610, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 731, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutorActionPerformed
        ArbolGenero gen = new ArbolGenero(); //Genero
        gen.insertar_nodo(2, "¿Le gusta la ciencia?");
        gen.insertar_nodo(1, "\n- Carl Bergstrom\n- Jevin West\n- David Attenborough");
        gen.insertar_nodo(4, "¿Le gusta la historia?");
        gen.insertar_nodo(3, "\n- Carlos Contreras\n- Mario Vargas Llosa");
        gen.insertar_nodo(6, "¿Le gusta la biogrtafía?");
        gen.insertar_nodo(5, "\n- Jane Bowles\n- Christian Ferrer");

        gen.insertar_nodo(8, "¿Le gusta las intriga?");
        gen.insertar_nodo(7, "\n- Richard Courant\n- Simon Singh\n- Clara Grima");
        gen.insertar_nodo(10, "¿Le gusta las cocina?");
        gen.insertar_nodo(9, "\n- Gastón Acurio\n- Clauda Varleta\n- Joan Roca");

        gen.insertar_nodo(12, "¿Le gusta la ficción?");
        gen.insertar_nodo(11, "\n- Aldoys Huxley\n- George Orwell\n- Frank Herbert");
        gen.insertar_nodo(14, "¿Le gusta la acción?");
        gen.insertar_nodo(13, "\n- Paula Hawkins\n- Dolores Rodondo\n- Jose Antonio Kapelo");

        gen.insertar_nodo(16, "¿Prefiere infantiles?");
        gen.insertar_nodo(15, "\n- Roberto Gómez Bolaños\n- Antoine SaintExupery");

        //JOptionPane.showMessageDialog(null, "\n" + autor.realizar_operacion());
        txtautorprueba.setText(gen.realizar_operacion());
    }//GEN-LAST:event_btnAutorActionPerformed

    private void jbtnEditorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEditorialActionPerformed
        ArbolEdad edad = new ArbolEdad(); //edad
        //nodo isqueirda es menor que el padre y el deracha es mayor al padre
        edad.insertar_nodo(9, "¿Eres mayor de 18 años?");
edad.insertar_nodo(2, "¿Te gustan las películas de acción?");
edad.insertar_nodo(1, "- The Dark Knight\n- Mad Max: Fury Road\n- Inception\n- John Wick\n- Avengers: Endgame");
edad.insertar_nodo(4, "¿Prefieres películas de comedia?");
edad.insertar_nodo(3, "- Superbad\n- Step Brothers\n- Bridesmaids\n- Deadpool\n- The Grand Budapest Hotel");
edad.insertar_nodo(6, "¿Te interesan las películas dramáticas?");
edad.insertar_nodo(5, "- The Shawshank Redemption\n- Forrest Gump\n- Schindler's List\n- The Pursuit of Happyness\n- A Beautiful Mind");
edad.insertar_nodo(7, "¿Te gustan las películas de ciencia ficción?");
edad.insertar_nodo(8, "- Interstellar\n- Blade Runner 2049\n- The Matrix\n- Inception\n- Arrival");
        txteditorialprueba.setText(edad.realizar_operacion());
    }//GEN-LAST:event_jbtnEditorialActionPerformed

    private void btnCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCategoriaActionPerformed
        ArbolDuracion dur = new ArbolDuracion(); //duracion
        //nodo isqueirda es menor que el padre y el deracha es mayor al padre
        dur.insertar_Nodo(8, "¿Prefieres películas que duren mucho tiempo o poco tiempo?");
dur.insertar_Nodo(2, "¿Te gustan las películas de acción más cortas o más largas?");
dur.insertar_Nodo(1, "- Si prefieres películas cortas:\n  - The Dark Knight\n  - Mad Max: Fury Road\n  - Die Hard\n  - The Matrix\n  - John Wick");
dur.insertar_Nodo(4, "¿Te gustan las películas infantiles de duración corta o larga?");
dur.insertar_Nodo(3, "- Si te gustan las películas infantiles cortas:\n  - Moana\n  - Despicable Me\n  - Coco\n  - The Incredibles\n  - Zootopia");
dur.insertar_Nodo(6, "¿Prefieres películas de terror cortas o más extensas?");
dur.insertar_Nodo(5, "- Si te gusta el terror:\n  - Get Out\n  - A Quiet Place\n  - Hereditary\n  - Paranormal Activity\n  - The Conjuring");
dur.insertar_Nodo(7, "- Si prefieres películas juveniles de duración media:\n  - The Perks of Being a Wallflower\n  - The Fault in Our Stars\n  - The Hunger Games\n  - Maze Runner\n  - Divergent");

dur.insertar_Nodo(12, "¿Te interesan las biografías de duración corta o larga?");
dur.insertar_Nodo(10, "¿Te gusta la historia en películas más extensas o más cortas?");
dur.insertar_Nodo(9, "- Si te interesan las biografías extensas:\n  - The Social Network\n  - The Theory of Everything\n  - Bohemian Rhapsody\n  - Steve Jobs\n  - The Imitation Game");
dur.insertar_Nodo(14, "¿Te gustan las películas basadas en matemáticas o ciencia de duración corta o larga?");
dur.insertar_Nodo(13, "- Si te gustan las películas relacionadas con matemáticas o ciencia:\n  - A Beautiful Mind\n  - Interstellar\n  - The Martian\n  - The Imitation Game\n  - The Theory of Everything");
dur.insertar_Nodo(16, "¿Te interesa la cocina en documentales cortos o largos?");
dur.insertar_Nodo(15, "- Si te interesa la cocina:\n  - Jiro Dreams of Sushi\n  - Chef's Table\n  - Ratatouille\n  - Julie & Julia\n  - Burnt");
dur.insertar_Nodo(18, "¿Te gusta el romance en películas de duración corta o larga?");
dur.insertar_Nodo(17, "- Si te gusta el romance:\n  - Before Sunrise\n  - La La Land\n  - The Notebook\n  - Pride and Prejudice\n  - 500 Days of Summer");
dur.insertar_Nodo(11, "- Si prefieres películas de duración media:\n  - Forrest Gump\n  - The Godfather\n  - Gladiator\n  - Inglourious Basterds\n  - The Departed");
dur.insertar_Nodo(19, "La próxima semana se actualizará el registro de películas. ¡Esperamos que encuentres una que se ajuste a tu tiempo!");

        //JOptionPane.showMessageDialog(null, "\n" + cat.realizar_Pregunta());
        txtcategoriaprueba.setText(dur.realizar_Pregunta());
    }//GEN-LAST:event_btnCategoriaActionPerformed

    private void btnAutorAleatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutorAleatorioActionPerformed
        try {
            // 1. Establecer la conexión a la base de datos
            Connection conexion = ConexionBD.establecerConexion();

            // 2. Consulta aleatoria para obtener un autor
            String consultaSQL = "SELECT Director FROM Pelicula ORDER BY RAND() LIMIT 1;";
            try (PreparedStatement statement = conexion.prepareStatement(consultaSQL);
                 ResultSet resultSet = statement.executeQuery()) {

                // 3. Obtener el resultado de la consulta
                if (resultSet.next()) {
                    String autorRecomendado = resultSet.getString("Director");

                    // 4. Actualizar la interfaz gráfica
                    JOptionPane.showMessageDialog(this, "Autor Recomendado: " + autorRecomendado);
                } else {
                    JOptionPane.showMessageDialog(this, "No se encontraron autores en la base de datos.");
                }
            }
        } catch (SQLException ex) {
            // Manejo de excepciones
            ex.printStackTrace();
        }
    
    }//GEN-LAST:event_btnAutorAleatorioActionPerformed

    private void btnTituloAleatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTituloAleatorioActionPerformed
        try {
            // 1. Establecer la conexión a la base de datos
            Connection conexion = ConexionBD.establecerConexion();

            // 2. Consulta aleatoria para obtener un autor
            String consultaSQL = "SELECT Titulo FROM Pelicula ORDER BY RAND() LIMIT 1;";
            try (PreparedStatement statement = conexion.prepareStatement(consultaSQL);
                 ResultSet resultSet = statement.executeQuery()) {

                // 3. Obtener el resultado de la consulta
                if (resultSet.next()) {
                    String autorRecomendado = resultSet.getString("Titulo");

                    // 4. Actualizar la interfaz gráfica
                    JOptionPane.showMessageDialog(this, "Autor Recomendado: " + autorRecomendado);
                } else {
                    JOptionPane.showMessageDialog(this, "No se encontraron autores en la base de datos.");
                }
            }
        } catch (SQLException ex) {
            // Manejo de excepciones
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnTituloAleatorioActionPerformed



    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ratatata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ratatata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ratatata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ratatata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ratatata().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnAutor;
    public javax.swing.JButton btnAutorAleatorio;
    public javax.swing.JButton btnCategoria;
    public javax.swing.JButton btnTituloAleatorio;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JPanel jPanel2;
    public javax.swing.JButton jbtnEditorial;
    public javax.swing.JTextField txtautorprueba;
    public javax.swing.JTextField txtcategoriaprueba;
    public javax.swing.JTextField txteditorialprueba;
    // End of variables declaration//GEN-END:variables
}
